{"version":3,"sources":["movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","id","title","year","genres","summary","poster","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","console","log","this","movie","medium_cover_image","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRA8BeA,MA1Bf,YAA6D,EAA5CC,GAA6C,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,OACjD,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKF,EAAQG,IAAKP,IACvB,sBAAKK,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BL,IAC5B,oBAAIK,UAAU,YAAd,SAA2BJ,IAC3B,oBAAII,UAAU,cAAd,SACGH,EAAOM,KAAI,SAACC,EAAOC,GAAR,OACV,6BAAiBD,GAARC,QAGb,mBAAGL,UAAU,eAAb,SAA6BF,EAAQQ,MAAM,EAAG,cCoCvCC,G,kNA9CbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAMAC,IAAMC,IACd,4DAPQ,gBAIEJ,EAJF,EAGRK,KACEA,KAAQL,OAKZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IACnCQ,QAAQC,WAAWR,GAVT,2C,kEAcVS,KAAKR,c,+BAGG,IAAD,EACuBQ,KAAKX,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,qBAAKV,UAAU,MAAf,SACGS,EACG,oBACAC,EAAOP,KAAI,SAACiB,GACV,OACE,cAAC,EAAD,CAEE1B,GAAI0B,EAAM1B,GACVC,MAAOyB,EAAMzB,MACbC,KAAMwB,EAAMxB,KACZC,OAAQuB,EAAMvB,OACdC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAMC,oBANTD,EAAM1B,a,GAhCX4B,IAAMC,YCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ce370e76.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./movie.css\";\n\nfunction Movie({ id, title, year, genres, summary, poster }) {\n  return (\n    <div className=\"movie\">\n      <img src={poster} alt={title}></img>\n      <div className=\"movieData\">\n        <h3 className=\"movieTitle\">{title}</h3>\n        <h5 className=\"movieYear\">{year}</h5>\n        <ul className=\"movieGenres\">\n          {genres.map((genre, index) => (\n            <li key={index}>{genre}</li>\n          ))}\n        </ul>\n        <p className=\"movieSummary\">{summary.slice(0, 180)}</p>\n      </div>\n    </div>\n  );\n}\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  year: PropTypes.number.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n};\n\nexport default Movie;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./movie\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  getMovies = async () => {\n    //const { movies, isLoading } = this.state;\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n    this.setState({ movies, isLoading: false });\n    console.log(typeof movies);\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <div className=\"App\">\n        {isLoading\n          ? \"is Loading now...\"\n          : movies.map((movie) => {\n              return (\n                <Movie\n                  key={movie.id}\n                  id={movie.id}\n                  title={movie.title}\n                  year={movie.year}\n                  genres={movie.genres}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                />\n              );\n            })}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}